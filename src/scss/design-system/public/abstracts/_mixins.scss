//---------------------------
//
// Public > Abstracts > Mixins
//---------------------------

/// Outputs CSS code, wrapped in a media query, at a particular
/// viewport size.
/// @param {String} $breakpoint - The breakpoint at which the CSS
/// should take effect.
/// @output CSS code wrapped in a media query.
/// @see $breakpoints
@mixin ds-breakpoint($breakpoint) {
    @include _design-system-breakpoint($breakpoint) {
        @content;
    }
}

@mixin ds-fluid-type(
    $min-step, 
    $max-step, 
    $min-vw: map-get($ds-layout-breakpoints, sm), 
    $max-vw: map-get($ds-layout-breakpoints, lg)) {
    @include _design-system-fluid-type($min-step, $max-step, $min-vw, $max-vw);
}

@mixin ds-spacing-em(
    $shorthands, 
    $step-names, 
    $is-important: false,
    $is-negative: false, 
    $shorthands-map: $ds-spacing-shorthands-map, 
    $step-map: $ds-spacing-step-map
) {
    $use-em: true;
    @include _design-system-spacing(
        $shorthands, 
        $step-names,
        $shorthands-map, 
        $step-map,
        $use-em,
        $is-important,
        $is-negative);
}

@mixin ds-spacing-rem(
    $shorthands, 
    $step-names, 
    $is-important: false,
    $is-negative: false, 
    $shorthands-map: $ds-spacing-shorthands-map, 
    $step-map: $ds-spacing-step-map
) {
    $use-em: false;
    @include _design-system-spacing(
        $shorthands, 
        $step-names,
        $shorthands-map, 
        $step-map,
        $use-em,
        $is-important,
        $is-negative);
}

@mixin ds-create-spacing-classes {
    @include _design-system-create-spacing-classes(
        $shorthands-map: $ds-spacing-shorthands-map, 
        $step-map: $ds-spacing-step-map);
}

@mixin ds-px-to-em($properties, $px, $is-negative: false) {
    @include _design-system-px-to-em($properties, $px, $is-negative);
}

@mixin ds-px-to-rem($properties, $px, $is-negative: false) {
    @include _design-system-px-to-rem($properties, $px, $is-negative);
}